# Caps List
<!-- # Generated by internal/generate/namescapslist/main.go; DO NOT EDIT. -->

In Terraform AWS Provider code, we have two guiding principles for capitalization in function, constant, and variable names:

1. We use [Go-idiomatic MixedCaps](https://go.dev/doc/effective_go#mixed-caps), with [idiomatic treatment of initialisms](https://github.com/golang/go/wiki/CodeReviewComments#initialisms).
2. We follow AWS's preferred capitalization for service names (_e.g._, ["SageMaker"](https://aws.amazon.com/sagemaker/) rather than "Sagemaker").

For _principle 1_, the [golang/go Go Code Review Comments](https://github.com/golang/go/wiki/CodeReviewComments#initialisms) are instructive:

> Words in names that are initialisms or acronyms (e.g. "URL" or "NATO") have a consistent case. For example, "URL" should appear as "URL" or "url" (as in "urlPony", or "URLPony"), never as "Url". As an example: ServeHTTP not ServeHttp. For identifiers with multiple initialized "words", use for example "xmlHTTPRequest" or "XMLHTTPRequest".
>
> This rule also applies to "ID" when it is short for "identifier" (which is pretty much all cases when it's not the "id" as in "ego", "superego"), so write "appID" instead of "appId".

For _principle 2_, take a look at the AWS website for a service to see the capitalization that AWS prefers. For example, [GameLift](https://aws.amazon.com/gamelift/) rather than "Gamelift".

To help enforce these principles, we are using [semgrep](https://semgrep.dev/) rules. Below, you will find a list of the specific caps cases we look for currently. This list is generated from the [same source](caps.csv) as the semgrep rules.

**NOTE:** Please do NOT add "Id" to the list. Use "ID" or "id", never "Id", but we have found linter enforcement of this initialism to be too error prone because of the number of false positives for "Id" (_e.g._, "Identifier").

**NOTE:** Capitalization rules are all found in the ".semgrep-caps-aws-ec2.yml" configuration file are named `<Test#>-in-func-name`, `<Test#>-in-var-name`, or `<Test#>-in-const-name`, where `Test#` comes from the table below.

**NOTE:** The `Test#` order is _wonky_ because we need to match on longer names first. In the future, with an option to automatically correct problems, fixing the longest possible initialism first is important (_e.g._, `HTTPS` needs to be fixed before `HTTP` to avoid something like `HTTPs`).
