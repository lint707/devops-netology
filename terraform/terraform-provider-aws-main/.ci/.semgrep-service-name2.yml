# Generated by internal/generate/servicesemgrep/main.go; DO NOT EDIT.
rules:
  - id: inspector-in-func-name
    languages:
      - go
    message: Do not use "Inspector" in func name inside inspector package
    paths:
      include:
        - internal/service/inspector
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Inspector"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: inspector-in-test-name
    languages:
      - go
    message: Include "Inspector" in test name
    paths:
      include:
        - internal/service/inspector/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccInspector"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: inspector-in-const-name
    languages:
      - go
    message: Do not use "Inspector" in const name inside inspector package
    paths:
      include:
        - internal/service/inspector
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Inspector"
    severity: WARNING
  - id: inspector-in-var-name
    languages:
      - go
    message: Do not use "Inspector" in var name inside inspector package
    paths:
      include:
        - internal/service/inspector
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Inspector"
    severity: WARNING
  - id: iot-in-func-name
    languages:
      - go
    message: Do not use "IoT" in func name inside iot package
    paths:
      include:
        - internal/service/iot
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoT"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: iot-in-test-name
    languages:
      - go
    message: Include "IoT" in test name
    paths:
      include:
        - internal/service/iot/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIoT"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: iot-in-const-name
    languages:
      - go
    message: Do not use "IoT" in const name inside iot package
    paths:
      include:
        - internal/service/iot
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoT"
    severity: WARNING
  - id: iot-in-var-name
    languages:
      - go
    message: Do not use "IoT" in var name inside iot package
    paths:
      include:
        - internal/service/iot
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoT"
    severity: WARNING
  - id: iotanalytics-in-func-name
    languages:
      - go
    message: Do not use "IoTAnalytics" in func name inside iotanalytics package
    paths:
      include:
        - internal/service/iotanalytics
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTAnalytics"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: iotanalytics-in-test-name
    languages:
      - go
    message: Include "IoTAnalytics" in test name
    paths:
      include:
        - internal/service/iotanalytics/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIoTAnalytics"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: iotanalytics-in-const-name
    languages:
      - go
    message: Do not use "IoTAnalytics" in const name inside iotanalytics package
    paths:
      include:
        - internal/service/iotanalytics
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTAnalytics"
    severity: WARNING
  - id: iotanalytics-in-var-name
    languages:
      - go
    message: Do not use "IoTAnalytics" in var name inside iotanalytics package
    paths:
      include:
        - internal/service/iotanalytics
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTAnalytics"
    severity: WARNING
  - id: iotevents-in-func-name
    languages:
      - go
    message: Do not use "IoTEvents" in func name inside iotevents package
    paths:
      include:
        - internal/service/iotevents
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTEvents"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: iotevents-in-test-name
    languages:
      - go
    message: Include "IoTEvents" in test name
    paths:
      include:
        - internal/service/iotevents/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIoTEvents"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: iotevents-in-const-name
    languages:
      - go
    message: Do not use "IoTEvents" in const name inside iotevents package
    paths:
      include:
        - internal/service/iotevents
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTEvents"
    severity: WARNING
  - id: iotevents-in-var-name
    languages:
      - go
    message: Do not use "IoTEvents" in var name inside iotevents package
    paths:
      include:
        - internal/service/iotevents
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTEvents"
    severity: WARNING
  - id: ipam-in-test-name
    languages:
      - go
    message: Include "IPAM" in test name
    paths:
      include:
        - internal/service/ec2/ipam_*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIPAM"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kafka-in-func-name
    languages:
      - go
    message: Do not use "Kafka" in func name inside kafka package
    paths:
      include:
        - internal/service/kafka
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kafka"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kafka-in-test-name
    languages:
      - go
    message: Include "Kafka" in test name
    paths:
      include:
        - internal/service/kafka/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKafka"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kafka-in-const-name
    languages:
      - go
    message: Do not use "Kafka" in const name inside kafka package
    paths:
      include:
        - internal/service/kafka
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kafka"
    severity: WARNING
  - id: kafka-in-var-name
    languages:
      - go
    message: Do not use "Kafka" in var name inside kafka package
    paths:
      include:
        - internal/service/kafka
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kafka"
    severity: WARNING
  - id: kafkaconnect-in-func-name
    languages:
      - go
    message: Do not use "KafkaConnect" in func name inside kafkaconnect package
    paths:
      include:
        - internal/service/kafkaconnect
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KafkaConnect"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kafkaconnect-in-test-name
    languages:
      - go
    message: Include "KafkaConnect" in test name
    paths:
      include:
        - internal/service/kafkaconnect/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKafkaConnect"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kafkaconnect-in-const-name
    languages:
      - go
    message: Do not use "KafkaConnect" in const name inside kafkaconnect package
    paths:
      include:
        - internal/service/kafkaconnect
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KafkaConnect"
    severity: WARNING
  - id: kafkaconnect-in-var-name
    languages:
      - go
    message: Do not use "KafkaConnect" in var name inside kafkaconnect package
    paths:
      include:
        - internal/service/kafkaconnect
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KafkaConnect"
    severity: WARNING
  - id: kendra-in-func-name
    languages:
      - go
    message: Do not use "Kendra" in func name inside kendra package
    paths:
      include:
        - internal/service/kendra
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kendra"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kendra-in-test-name
    languages:
      - go
    message: Include "Kendra" in test name
    paths:
      include:
        - internal/service/kendra/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKendra"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kendra-in-const-name
    languages:
      - go
    message: Do not use "Kendra" in const name inside kendra package
    paths:
      include:
        - internal/service/kendra
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kendra"
    severity: WARNING
  - id: kendra-in-var-name
    languages:
      - go
    message: Do not use "Kendra" in var name inside kendra package
    paths:
      include:
        - internal/service/kendra
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kendra"
    severity: WARNING
  - id: keyspaces-in-func-name
    languages:
      - go
    message: Do not use "Keyspaces" in func name inside keyspaces package
    paths:
      include:
        - internal/service/keyspaces
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Keyspaces"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: keyspaces-in-test-name
    languages:
      - go
    message: Include "Keyspaces" in test name
    paths:
      include:
        - internal/service/keyspaces/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKeyspaces"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: keyspaces-in-const-name
    languages:
      - go
    message: Do not use "Keyspaces" in const name inside keyspaces package
    paths:
      include:
        - internal/service/keyspaces
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Keyspaces"
    severity: WARNING
  - id: keyspaces-in-var-name
    languages:
      - go
    message: Do not use "Keyspaces" in var name inside keyspaces package
    paths:
      include:
        - internal/service/keyspaces
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Keyspaces"
    severity: WARNING
  - id: kinesis-in-func-name
    languages:
      - go
    message: Do not use "Kinesis" in func name inside kinesis package
    paths:
      include:
        - internal/service/kinesis
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kinesis"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesis-in-test-name
    languages:
      - go
    message: Include "Kinesis" in test name
    paths:
      include:
        - internal/service/kinesis/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKinesis"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesis-in-const-name
    languages:
      - go
    message: Do not use "Kinesis" in const name inside kinesis package
    paths:
      include:
        - internal/service/kinesis
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kinesis"
    severity: WARNING
  - id: kinesis-in-var-name
    languages:
      - go
    message: Do not use "Kinesis" in var name inside kinesis package
    paths:
      include:
        - internal/service/kinesis
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kinesis"
    severity: WARNING
  - id: kinesisanalytics-in-func-name
    languages:
      - go
    message: Do not use "KinesisAnalytics" in func name inside kinesisanalytics package
    paths:
      include:
        - internal/service/kinesisanalytics
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalytics"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisanalytics-in-test-name
    languages:
      - go
    message: Include "KinesisAnalytics" in test name
    paths:
      include:
        - internal/service/kinesisanalytics/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKinesisAnalytics"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisanalytics-in-const-name
    languages:
      - go
    message: Do not use "KinesisAnalytics" in const name inside kinesisanalytics package
    paths:
      include:
        - internal/service/kinesisanalytics
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalytics"
    severity: WARNING
  - id: kinesisanalytics-in-var-name
    languages:
      - go
    message: Do not use "KinesisAnalytics" in var name inside kinesisanalytics package
    paths:
      include:
        - internal/service/kinesisanalytics
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalytics"
    severity: WARNING
  - id: kinesisanalyticsv2-in-func-name
    languages:
      - go
    message: Do not use "KinesisAnalyticsV2" in func name inside kinesisanalyticsv2 package
    paths:
      include:
        - internal/service/kinesisanalyticsv2
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalyticsV2"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisanalyticsv2-in-test-name
    languages:
      - go
    message: Include "KinesisAnalyticsV2" in test name
    paths:
      include:
        - internal/service/kinesisanalyticsv2/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKinesisAnalyticsV2"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisanalyticsv2-in-const-name
    languages:
      - go
    message: Do not use "KinesisAnalyticsV2" in const name inside kinesisanalyticsv2 package
    paths:
      include:
        - internal/service/kinesisanalyticsv2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalyticsV2"
    severity: WARNING
  - id: kinesisanalyticsv2-in-var-name
    languages:
      - go
    message: Do not use "KinesisAnalyticsV2" in var name inside kinesisanalyticsv2 package
    paths:
      include:
        - internal/service/kinesisanalyticsv2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalyticsV2"
    severity: WARNING
  - id: kinesisvideo-in-func-name
    languages:
      - go
    message: Do not use "KinesisVideo" in func name inside kinesisvideo package
    paths:
      include:
        - internal/service/kinesisvideo
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisVideo"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisvideo-in-test-name
    languages:
      - go
    message: Include "KinesisVideo" in test name
    paths:
      include:
        - internal/service/kinesisvideo/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKinesisVideo"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisvideo-in-const-name
    languages:
      - go
    message: Do not use "KinesisVideo" in const name inside kinesisvideo package
    paths:
      include:
        - internal/service/kinesisvideo
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisVideo"
    severity: WARNING
  - id: kinesisvideo-in-var-name
    languages:
      - go
    message: Do not use "KinesisVideo" in var name inside kinesisvideo package
    paths:
      include:
        - internal/service/kinesisvideo
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisVideo"
    severity: WARNING
  - id: kms-in-func-name
    languages:
      - go
    message: Do not use "KMS" in func name inside kms package
    paths:
      include:
        - internal/service/kms
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KMS"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: kms-in-test-name
    languages:
      - go
    message: Include "KMS" in test name
    paths:
      include:
        - internal/service/kms/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKMS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kms-in-const-name
    languages:
      - go
    message: Do not use "KMS" in const name inside kms package
    paths:
      include:
        - internal/service/kms
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KMS"
    severity: WARNING
  - id: kms-in-var-name
    languages:
      - go
    message: Do not use "KMS" in var name inside kms package
    paths:
      include:
        - internal/service/kms
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KMS"
    severity: WARNING
  - id: lakeformation-in-func-name
    languages:
      - go
    message: Do not use "LakeFormation" in func name inside lakeformation package
    paths:
      include:
        - internal/service/lakeformation
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LakeFormation"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: lakeformation-in-test-name
    languages:
      - go
    message: Include "LakeFormation" in test name
    paths:
      include:
        - internal/service/lakeformation/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLakeFormation"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: lakeformation-in-const-name
    languages:
      - go
    message: Do not use "LakeFormation" in const name inside lakeformation package
    paths:
      include:
        - internal/service/lakeformation
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LakeFormation"
    severity: WARNING
  - id: lakeformation-in-var-name
    languages:
      - go
    message: Do not use "LakeFormation" in var name inside lakeformation package
    paths:
      include:
        - internal/service/lakeformation
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LakeFormation"
    severity: WARNING
  - id: lambda-in-func-name
    languages:
      - go
    message: Do not use "Lambda" in func name inside lambda package
    paths:
      include:
        - internal/service/lambda
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lambda"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: lambda-in-test-name
    languages:
      - go
    message: Include "Lambda" in test name
    paths:
      include:
        - internal/service/lambda/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLambda"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: lambda-in-const-name
    languages:
      - go
    message: Do not use "Lambda" in const name inside lambda package
    paths:
      include:
        - internal/service/lambda
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lambda"
    severity: WARNING
  - id: lambda-in-var-name
    languages:
      - go
    message: Do not use "Lambda" in var name inside lambda package
    paths:
      include:
        - internal/service/lambda
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lambda"
    severity: WARNING
  - id: lex-in-func-name
    languages:
      - go
    message: Do not use "lex" in func name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lex"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: lex-in-const-name
    languages:
      - go
    message: Do not use "lex" in const name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lex"
    severity: WARNING
  - id: lex-in-var-name
    languages:
      - go
    message: Do not use "lex" in var name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lex"
    severity: WARNING
  - id: lexmodelbuilding-in-func-name
    languages:
      - go
    message: Do not use "lexmodelbuilding" in func name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuilding"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: lexmodelbuilding-in-const-name
    languages:
      - go
    message: Do not use "lexmodelbuilding" in const name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuilding"
    severity: WARNING
  - id: lexmodelbuilding-in-var-name
    languages:
      - go
    message: Do not use "lexmodelbuilding" in var name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuilding"
    severity: WARNING
  - id: lexmodelbuildingservice-in-func-name
    languages:
      - go
    message: Do not use "lexmodelbuildingservice" in func name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuildingservice"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: lexmodelbuildingservice-in-const-name
    languages:
      - go
    message: Do not use "lexmodelbuildingservice" in const name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuildingservice"
    severity: WARNING
  - id: lexmodelbuildingservice-in-var-name
    languages:
      - go
    message: Do not use "lexmodelbuildingservice" in var name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuildingservice"
    severity: WARNING
  - id: lexmodels-in-func-name
    languages:
      - go
    message: Do not use "LexModels" in func name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LexModels"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: lexmodels-in-test-name
    languages:
      - go
    message: Include "LexModels" in test name
    paths:
      include:
        - internal/service/lexmodels/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLexModels"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: lexmodels-in-const-name
    languages:
      - go
    message: Do not use "LexModels" in const name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LexModels"
    severity: WARNING
  - id: lexmodels-in-var-name
    languages:
      - go
    message: Do not use "LexModels" in var name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LexModels"
    severity: WARNING
  - id: licensemanager-in-func-name
    languages:
      - go
    message: Do not use "LicenseManager" in func name inside licensemanager package
    paths:
      include:
        - internal/service/licensemanager
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LicenseManager"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: licensemanager-in-test-name
    languages:
      - go
    message: Include "LicenseManager" in test name
    paths:
      include:
        - internal/service/licensemanager/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLicenseManager"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: licensemanager-in-const-name
    languages:
      - go
    message: Do not use "LicenseManager" in const name inside licensemanager package
    paths:
      include:
        - internal/service/licensemanager
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LicenseManager"
    severity: WARNING
  - id: licensemanager-in-var-name
    languages:
      - go
    message: Do not use "LicenseManager" in var name inside licensemanager package
    paths:
      include:
        - internal/service/licensemanager
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LicenseManager"
    severity: WARNING
  - id: lightsail-in-func-name
    languages:
      - go
    message: Do not use "Lightsail" in func name inside lightsail package
    paths:
      include:
        - internal/service/lightsail
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lightsail"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: lightsail-in-test-name
    languages:
      - go
    message: Include "Lightsail" in test name
    paths:
      include:
        - internal/service/lightsail/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLightsail"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: lightsail-in-const-name
    languages:
      - go
    message: Do not use "Lightsail" in const name inside lightsail package
    paths:
      include:
        - internal/service/lightsail
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lightsail"
    severity: WARNING
  - id: lightsail-in-var-name
    languages:
      - go
    message: Do not use "Lightsail" in var name inside lightsail package
    paths:
      include:
        - internal/service/lightsail
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lightsail"
    severity: WARNING
  - id: location-in-func-name
    languages:
      - go
    message: Do not use "Location" in func name inside location package
    paths:
      include:
        - internal/service/location
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Location"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: location-in-test-name
    languages:
      - go
    message: Include "Location" in test name
    paths:
      include:
        - internal/service/location/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLocation"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: location-in-const-name
    languages:
      - go
    message: Do not use "Location" in const name inside location package
    paths:
      include:
        - internal/service/location
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Location"
    severity: WARNING
  - id: location-in-var-name
    languages:
      - go
    message: Do not use "Location" in var name inside location package
    paths:
      include:
        - internal/service/location
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Location"
    severity: WARNING
  - id: locationservice-in-func-name
    languages:
      - go
    message: Do not use "locationservice" in func name inside location package
    paths:
      include:
        - internal/service/location
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)locationservice"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: locationservice-in-const-name
    languages:
      - go
    message: Do not use "locationservice" in const name inside location package
    paths:
      include:
        - internal/service/location
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)locationservice"
    severity: WARNING
  - id: locationservice-in-var-name
    languages:
      - go
    message: Do not use "locationservice" in var name inside location package
    paths:
      include:
        - internal/service/location
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)locationservice"
    severity: WARNING
  - id: logs-in-func-name
    languages:
      - go
    message: Do not use "Logs" in func name inside logs package
    paths:
      include:
        - internal/service/logs
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Logs"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: logs-in-test-name
    languages:
      - go
    message: Include "Logs" in test name
    paths:
      include:
        - internal/service/logs/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLogs"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: logs-in-const-name
    languages:
      - go
    message: Do not use "Logs" in const name inside logs package
    paths:
      include:
        - internal/service/logs
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Logs"
    severity: WARNING
  - id: logs-in-var-name
    languages:
      - go
    message: Do not use "Logs" in var name inside logs package
    paths:
      include:
        - internal/service/logs
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Logs"
    severity: WARNING
  - id: macie-in-func-name
    languages:
      - go
    message: Do not use "Macie" in func name inside macie package
    paths:
      include:
        - internal/service/macie
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: macie-in-test-name
    languages:
      - go
    message: Include "Macie" in test name
    paths:
      include:
        - internal/service/macie/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMacie"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: macie-in-const-name
    languages:
      - go
    message: Do not use "Macie" in const name inside macie package
    paths:
      include:
        - internal/service/macie
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie"
    severity: WARNING
  - id: macie-in-var-name
    languages:
      - go
    message: Do not use "Macie" in var name inside macie package
    paths:
      include:
        - internal/service/macie
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie"
    severity: WARNING
  - id: macie2-in-func-name
    languages:
      - go
    message: Do not use "Macie2" in func name inside macie2 package
    paths:
      include:
        - internal/service/macie2
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie2"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: macie2-in-test-name
    languages:
      - go
    message: Include "Macie2" in test name
    paths:
      include:
        - internal/service/macie2/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMacie2"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: macie2-in-const-name
    languages:
      - go
    message: Do not use "Macie2" in const name inside macie2 package
    paths:
      include:
        - internal/service/macie2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie2"
    severity: WARNING
  - id: macie2-in-var-name
    languages:
      - go
    message: Do not use "Macie2" in var name inside macie2 package
    paths:
      include:
        - internal/service/macie2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie2"
    severity: WARNING
  - id: managedgrafana-in-func-name
    languages:
      - go
    message: Do not use "managedgrafana" in func name inside grafana package
    paths:
      include:
        - internal/service/grafana
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)managedgrafana"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: managedgrafana-in-const-name
    languages:
      - go
    message: Do not use "managedgrafana" in const name inside grafana package
    paths:
      include:
        - internal/service/grafana
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)managedgrafana"
    severity: WARNING
  - id: managedgrafana-in-var-name
    languages:
      - go
    message: Do not use "managedgrafana" in var name inside grafana package
    paths:
      include:
        - internal/service/grafana
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)managedgrafana"
    severity: WARNING
  - id: mediaconnect-in-func-name
    languages:
      - go
    message: Do not use "MediaConnect" in func name inside mediaconnect package
    paths:
      include:
        - internal/service/mediaconnect
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConnect"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: mediaconnect-in-test-name
    languages:
      - go
    message: Include "MediaConnect" in test name
    paths:
      include:
        - internal/service/mediaconnect/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaConnect"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mediaconnect-in-const-name
    languages:
      - go
    message: Do not use "MediaConnect" in const name inside mediaconnect package
    paths:
      include:
        - internal/service/mediaconnect
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConnect"
    severity: WARNING
  - id: mediaconnect-in-var-name
    languages:
      - go
    message: Do not use "MediaConnect" in var name inside mediaconnect package
    paths:
      include:
        - internal/service/mediaconnect
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConnect"
    severity: WARNING
  - id: mediaconvert-in-func-name
    languages:
      - go
    message: Do not use "MediaConvert" in func name inside mediaconvert package
    paths:
      include:
        - internal/service/mediaconvert
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConvert"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: mediaconvert-in-test-name
    languages:
      - go
    message: Include "MediaConvert" in test name
    paths:
      include:
        - internal/service/mediaconvert/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaConvert"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mediaconvert-in-const-name
    languages:
      - go
    message: Do not use "MediaConvert" in const name inside mediaconvert package
    paths:
      include:
        - internal/service/mediaconvert
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConvert"
    severity: WARNING
  - id: mediaconvert-in-var-name
    languages:
      - go
    message: Do not use "MediaConvert" in var name inside mediaconvert package
    paths:
      include:
        - internal/service/mediaconvert
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConvert"
    severity: WARNING
  - id: medialive-in-func-name
    languages:
      - go
    message: Do not use "MediaLive" in func name inside medialive package
    paths:
      include:
        - internal/service/medialive
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaLive"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: medialive-in-test-name
    languages:
      - go
    message: Include "MediaLive" in test name
    paths:
      include:
        - internal/service/medialive/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaLive"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: medialive-in-const-name
    languages:
      - go
    message: Do not use "MediaLive" in const name inside medialive package
    paths:
      include:
        - internal/service/medialive
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaLive"
    severity: WARNING
  - id: medialive-in-var-name
    languages:
      - go
    message: Do not use "MediaLive" in var name inside medialive package
    paths:
      include:
        - internal/service/medialive
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaLive"
    severity: WARNING
  - id: mediapackage-in-func-name
    languages:
      - go
    message: Do not use "MediaPackage" in func name inside mediapackage package
    paths:
      include:
        - internal/service/mediapackage
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaPackage"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: mediapackage-in-test-name
    languages:
      - go
    message: Include "MediaPackage" in test name
    paths:
      include:
        - internal/service/mediapackage/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaPackage"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mediapackage-in-const-name
    languages:
      - go
    message: Do not use "MediaPackage" in const name inside mediapackage package
    paths:
      include:
        - internal/service/mediapackage
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaPackage"
    severity: WARNING
  - id: mediapackage-in-var-name
    languages:
      - go
    message: Do not use "MediaPackage" in var name inside mediapackage package
    paths:
      include:
        - internal/service/mediapackage
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaPackage"
    severity: WARNING
  - id: mediastore-in-func-name
    languages:
      - go
    message: Do not use "MediaStore" in func name inside mediastore package
    paths:
      include:
        - internal/service/mediastore
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaStore"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: mediastore-in-test-name
    languages:
      - go
    message: Include "MediaStore" in test name
    paths:
      include:
        - internal/service/mediastore/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaStore"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mediastore-in-const-name
    languages:
      - go
    message: Do not use "MediaStore" in const name inside mediastore package
    paths:
      include:
        - internal/service/mediastore
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaStore"
    severity: WARNING
  - id: mediastore-in-var-name
    languages:
      - go
    message: Do not use "MediaStore" in var name inside mediastore package
    paths:
      include:
        - internal/service/mediastore
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaStore"
    severity: WARNING
  - id: memorydb-in-func-name
    languages:
      - go
    message: Do not use "MemoryDB" in func name inside memorydb package
    paths:
      include:
        - internal/service/memorydb
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MemoryDB"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: memorydb-in-test-name
    languages:
      - go
    message: Include "MemoryDB" in test name
    paths:
      include:
        - internal/service/memorydb/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMemoryDB"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: memorydb-in-const-name
    languages:
      - go
    message: Do not use "MemoryDB" in const name inside memorydb package
    paths:
      include:
        - internal/service/memorydb
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MemoryDB"
    severity: WARNING
  - id: memorydb-in-var-name
    languages:
      - go
    message: Do not use "MemoryDB" in var name inside memorydb package
    paths:
      include:
        - internal/service/memorydb
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MemoryDB"
    severity: WARNING
  - id: meta-in-func-name
    languages:
      - go
    message: Do not use "Meta" in func name inside meta package
    paths:
      include:
        - internal/service/meta
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Meta"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: meta-in-test-name
    languages:
      - go
    message: Include "Meta" in test name
    paths:
      include:
        - internal/service/meta/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMeta"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: meta-in-const-name
    languages:
      - go
    message: Do not use "Meta" in const name inside meta package
    paths:
      include:
        - internal/service/meta
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Meta"
    severity: WARNING
  - id: meta-in-var-name
    languages:
      - go
    message: Do not use "Meta" in var name inside meta package
    paths:
      include:
        - internal/service/meta
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Meta"
    severity: WARNING
  - id: mq-in-func-name
    languages:
      - go
    message: Do not use "MQ" in func name inside mq package
    paths:
      include:
        - internal/service/mq
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MQ"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: mq-in-test-name
    languages:
      - go
    message: Include "MQ" in test name
    paths:
      include:
        - internal/service/mq/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMQ"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mq-in-const-name
    languages:
      - go
    message: Do not use "MQ" in const name inside mq package
    paths:
      include:
        - internal/service/mq
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MQ"
    severity: WARNING
  - id: mq-in-var-name
    languages:
      - go
    message: Do not use "MQ" in var name inside mq package
    paths:
      include:
        - internal/service/mq
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MQ"
    severity: WARNING
  - id: msk-in-func-name
    languages:
      - go
    message: Do not use "msk" in func name inside kafka package
    paths:
      include:
        - internal/service/kafka
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)msk"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: msk-in-const-name
    languages:
      - go
    message: Do not use "msk" in const name inside kafka package
    paths:
      include:
        - internal/service/kafka
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)msk"
    severity: WARNING
  - id: msk-in-var-name
    languages:
      - go
    message: Do not use "msk" in var name inside kafka package
    paths:
      include:
        - internal/service/kafka
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)msk"
    severity: WARNING
  - id: mwaa-in-func-name
    languages:
      - go
    message: Do not use "MWAA" in func name inside mwaa package
    paths:
      include:
        - internal/service/mwaa
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MWAA"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: mwaa-in-test-name
    languages:
      - go
    message: Include "MWAA" in test name
    paths:
      include:
        - internal/service/mwaa/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMWAA"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mwaa-in-const-name
    languages:
      - go
    message: Do not use "MWAA" in const name inside mwaa package
    paths:
      include:
        - internal/service/mwaa
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MWAA"
    severity: WARNING
  - id: mwaa-in-var-name
    languages:
      - go
    message: Do not use "MWAA" in var name inside mwaa package
    paths:
      include:
        - internal/service/mwaa
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MWAA"
    severity: WARNING
  - id: neptune-in-func-name
    languages:
      - go
    message: Do not use "Neptune" in func name inside neptune package
    paths:
      include:
        - internal/service/neptune
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Neptune"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: neptune-in-test-name
    languages:
      - go
    message: Include "Neptune" in test name
    paths:
      include:
        - internal/service/neptune/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccNeptune"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: neptune-in-const-name
    languages:
      - go
    message: Do not use "Neptune" in const name inside neptune package
    paths:
      include:
        - internal/service/neptune
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Neptune"
    severity: WARNING
  - id: neptune-in-var-name
    languages:
      - go
    message: Do not use "Neptune" in var name inside neptune package
    paths:
      include:
        - internal/service/neptune
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Neptune"
    severity: WARNING
  - id: networkfirewall-in-func-name
    languages:
      - go
    message: Do not use "NetworkFirewall" in func name inside networkfirewall package
    paths:
      include:
        - internal/service/networkfirewall
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkFirewall"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: networkfirewall-in-test-name
    languages:
      - go
    message: Include "NetworkFirewall" in test name
    paths:
      include:
        - internal/service/networkfirewall/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccNetworkFirewall"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: networkfirewall-in-const-name
    languages:
      - go
    message: Do not use "NetworkFirewall" in const name inside networkfirewall package
    paths:
      include:
        - internal/service/networkfirewall
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkFirewall"
    severity: WARNING
  - id: networkfirewall-in-var-name
    languages:
      - go
    message: Do not use "NetworkFirewall" in var name inside networkfirewall package
    paths:
      include:
        - internal/service/networkfirewall
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkFirewall"
    severity: WARNING
  - id: networkmanager-in-func-name
    languages:
      - go
    message: Do not use "NetworkManager" in func name inside networkmanager package
    paths:
      include:
        - internal/service/networkmanager
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkManager"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: networkmanager-in-test-name
    languages:
      - go
    message: Include "NetworkManager" in test name
    paths:
      include:
        - internal/service/networkmanager/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccNetworkManager"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: networkmanager-in-const-name
    languages:
      - go
    message: Do not use "NetworkManager" in const name inside networkmanager package
    paths:
      include:
        - internal/service/networkmanager
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkManager"
    severity: WARNING
  - id: networkmanager-in-var-name
    languages:
      - go
    message: Do not use "NetworkManager" in var name inside networkmanager package
    paths:
      include:
        - internal/service/networkmanager
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkManager"
    severity: WARNING
  - id: opensearch-in-func-name
    languages:
      - go
    message: Do not use "OpenSearch" in func name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearch"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: opensearch-in-test-name
    languages:
      - go
    message: Include "OpenSearch" in test name
    paths:
      include:
        - internal/service/opensearch/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccOpenSearch"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: opensearch-in-const-name
    languages:
      - go
    message: Do not use "OpenSearch" in const name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearch"
    severity: WARNING
  - id: opensearch-in-var-name
    languages:
      - go
    message: Do not use "OpenSearch" in var name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearch"
    severity: WARNING
  - id: opensearchservice-in-func-name
    languages:
      - go
    message: Do not use "opensearchservice" in func name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)opensearchservice"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: opensearchservice-in-const-name
    languages:
      - go
    message: Do not use "opensearchservice" in const name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)opensearchservice"
    severity: WARNING
  - id: opensearchservice-in-var-name
    languages:
      - go
    message: Do not use "opensearchservice" in var name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)opensearchservice"
    severity: WARNING
  - id: opsworks-in-func-name
    languages:
      - go
    message: Do not use "OpsWorks" in func name inside opsworks package
    paths:
      include:
        - internal/service/opsworks
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpsWorks"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: opsworks-in-test-name
    languages:
      - go
    message: Include "OpsWorks" in test name
    paths:
      include:
        - internal/service/opsworks/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccOpsWorks"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: opsworks-in-const-name
    languages:
      - go
    message: Do not use "OpsWorks" in const name inside opsworks package
    paths:
      include:
        - internal/service/opsworks
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpsWorks"
    severity: WARNING
  - id: opsworks-in-var-name
    languages:
      - go
    message: Do not use "OpsWorks" in var name inside opsworks package
    paths:
      include:
        - internal/service/opsworks
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpsWorks"
    severity: WARNING
  - id: organizations-in-func-name
    languages:
      - go
    message: Do not use "Organizations" in func name inside organizations package
    paths:
      include:
        - internal/service/organizations
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Organizations"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: organizations-in-test-name
    languages:
      - go
    message: Include "Organizations" in test name
    paths:
      include:
        - internal/service/organizations/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccOrganizations"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: organizations-in-const-name
    languages:
      - go
    message: Do not use "Organizations" in const name inside organizations package
    paths:
      include:
        - internal/service/organizations
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Organizations"
    severity: WARNING
  - id: organizations-in-var-name
    languages:
      - go
    message: Do not use "Organizations" in var name inside organizations package
    paths:
      include:
        - internal/service/organizations
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Organizations"
    severity: WARNING
  - id: outposts-in-func-name
    languages:
      - go
    message: Do not use "Outposts" in func name inside outposts package
    paths:
      include:
        - internal/service/outposts
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Outposts"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: outposts-in-test-name
    languages:
      - go
    message: Include "Outposts" in test name
    paths:
      include:
        - internal/service/outposts/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccOutposts"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: outposts-in-const-name
    languages:
      - go
    message: Do not use "Outposts" in const name inside outposts package
    paths:
      include:
        - internal/service/outposts
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Outposts"
    severity: WARNING
  - id: outposts-in-var-name
    languages:
      - go
    message: Do not use "Outposts" in var name inside outposts package
    paths:
      include:
        - internal/service/outposts
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Outposts"
    severity: WARNING
  - id: pinpoint-in-func-name
    languages:
      - go
    message: Do not use "Pinpoint" in func name inside pinpoint package
    paths:
      include:
        - internal/service/pinpoint
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pinpoint"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: pinpoint-in-test-name
    languages:
      - go
    message: Include "Pinpoint" in test name
    paths:
      include:
        - internal/service/pinpoint/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccPinpoint"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: pinpoint-in-const-name
    languages:
      - go
    message: Do not use "Pinpoint" in const name inside pinpoint package
    paths:
      include:
        - internal/service/pinpoint
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pinpoint"
    severity: WARNING
  - id: pinpoint-in-var-name
    languages:
      - go
    message: Do not use "Pinpoint" in var name inside pinpoint package
    paths:
      include:
        - internal/service/pinpoint
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pinpoint"
    severity: WARNING
  - id: pricing-in-func-name
    languages:
      - go
    message: Do not use "Pricing" in func name inside pricing package
    paths:
      include:
        - internal/service/pricing
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pricing"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: pricing-in-test-name
    languages:
      - go
    message: Include "Pricing" in test name
    paths:
      include:
        - internal/service/pricing/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccPricing"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: pricing-in-const-name
    languages:
      - go
    message: Do not use "Pricing" in const name inside pricing package
    paths:
      include:
        - internal/service/pricing
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pricing"
    severity: WARNING
  - id: pricing-in-var-name
    languages:
      - go
    message: Do not use "Pricing" in var name inside pricing package
    paths:
      include:
        - internal/service/pricing
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pricing"
    severity: WARNING
  - id: prometheus-in-func-name
    languages:
      - go
    message: Do not use "prometheus" in func name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheus"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: prometheus-in-const-name
    languages:
      - go
    message: Do not use "prometheus" in const name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheus"
    severity: WARNING
  - id: prometheus-in-var-name
    languages:
      - go
    message: Do not use "prometheus" in var name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheus"
    severity: WARNING
  - id: prometheusservice-in-func-name
    languages:
      - go
    message: Do not use "prometheusservice" in func name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheusservice"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: prometheusservice-in-const-name
    languages:
      - go
    message: Do not use "prometheusservice" in const name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheusservice"
    severity: WARNING
  - id: prometheusservice-in-var-name
    languages:
      - go
    message: Do not use "prometheusservice" in var name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheusservice"
    severity: WARNING
  - id: qldb-in-func-name
    languages:
      - go
    message: Do not use "QLDB" in func name inside qldb package
    paths:
      include:
        - internal/service/qldb
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QLDB"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: qldb-in-test-name
    languages:
      - go
    message: Include "QLDB" in test name
    paths:
      include:
        - internal/service/qldb/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccQLDB"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: qldb-in-const-name
    languages:
      - go
    message: Do not use "QLDB" in const name inside qldb package
    paths:
      include:
        - internal/service/qldb
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QLDB"
    severity: WARNING
  - id: qldb-in-var-name
    languages:
      - go
    message: Do not use "QLDB" in var name inside qldb package
    paths:
      include:
        - internal/service/qldb
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QLDB"
    severity: WARNING
  - id: quicksight-in-func-name
    languages:
      - go
    message: Do not use "QuickSight" in func name inside quicksight package
    paths:
      include:
        - internal/service/quicksight
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QuickSight"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: quicksight-in-test-name
    languages:
      - go
    message: Include "QuickSight" in test name
    paths:
      include:
        - internal/service/quicksight/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccQuickSight"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: quicksight-in-const-name
    languages:
      - go
    message: Do not use "QuickSight" in const name inside quicksight package
    paths:
      include:
        - internal/service/quicksight
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QuickSight"
    severity: WARNING
  - id: quicksight-in-var-name
    languages:
      - go
    message: Do not use "QuickSight" in var name inside quicksight package
    paths:
      include:
        - internal/service/quicksight
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QuickSight"
    severity: WARNING
  - id: ram-in-func-name
    languages:
      - go
    message: Do not use "RAM" in func name inside ram package
    paths:
      include:
        - internal/service/ram
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RAM"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: ram-in-test-name
    languages:
      - go
    message: Include "RAM" in test name
    paths:
      include:
        - internal/service/ram/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccRAM"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ram-in-const-name
    languages:
      - go
    message: Do not use "RAM" in const name inside ram package
    paths:
      include:
        - internal/service/ram
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RAM"
    severity: WARNING
  - id: ram-in-var-name
    languages:
      - go
    message: Do not use "RAM" in var name inside ram package
    paths:
      include:
        - internal/service/ram
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RAM"
    severity: WARNING
  - id: rds-in-func-name
    languages:
      - go
    message: Do not use "RDS" in func name inside rds package
    paths:
      include:
        - internal/service/rds
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RDS"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: rds-in-test-name
    languages:
      - go
    message: Include "RDS" in test name
    paths:
      include:
        - internal/service/rds/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccRDS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: rds-in-const-name
    languages:
      - go
    message: Do not use "RDS" in const name inside rds package
    paths:
      include:
        - internal/service/rds
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RDS"
    severity: WARNING
  - id: rds-in-var-name
    languages:
      - go
    message: Do not use "RDS" in var name inside rds package
    paths:
      include:
        - internal/service/rds
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RDS"
    severity: WARNING
  - id: redshift-in-func-name
    languages:
      - go
    message: Do not use "Redshift" in func name inside redshift package
    paths:
      include:
        - internal/service/redshift
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Redshift"
            - pattern-not-regex: ^TestAcc.*
    severity: WARNING
  - id: redshift-in-test-name
    languages:
      - go
    message: Include "Redshift" in test name
    paths:
      include:
        - internal/service/redshift/*_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccRedshift"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: redshift-in-const-name
    languages:
      - go
    message: Do not use "Redshift" in const name inside redshift package
    paths:
      include:
        - internal/service/redshift
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Redshift"
    severity: WARNING
